#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const hello_world_stack_1 = require("../lib/hello-world-stack");
const app = new cdk.App();
const account = process.env.CDK_DEFAULT_ACCOUNT;
const region = process.env.CDK_DEFAULT_REGION;
const stage = process.env.DEPLOY_STAGE ? process.env.DEPLOY_STAGE : 'undefined';
const customSynthesizer = new cdk.DefaultStackSynthesizer({
    qualifier: 'one',
    fileAssetsBucketName: `cdk-one-assets-${account}-${region}`,
    bucketPrefix: '',
    cloudFormationExecutionRole: `arn:aws:iam::${account}:role/delegatedadmin/developer/cdk-one-cfn-exec-role-${account}-${region}`,
    deployRoleArn: `arn:aws:iam::${account}:role/delegatedadmin/developer/cdk-one-deploy-role-${account}-${region}`,
    fileAssetPublishingRoleArn: `arn:aws:iam::${account}:role/delegatedadmin/developer/cdk-one-file-publishing-role-${account}-${region}`,
    imageAssetPublishingRoleArn: `arn:aws:iam::${account}:role/delegatedadmin/developer/cdk-one-image-publishing-role-${account}-${region}`,
    lookupRoleArn: `arn:aws:iam::${account}:role/delegatedadmin/developer/cdk-one-lookup-role-${account}-${region}`,
});
const stack = new hello_world_stack_1.HelloWorldStack(app, 'HelloWorldStack', stage, {
    synthesizer: customSynthesizer,
    env: {
        account: account,
        region: region,
    },
    permissionsBoundary: cdk.PermissionsBoundary.fromArn(cdk.Arn.format({
        partition: 'aws',
        service: 'iam',
        region: region,
        account: account,
        resource: 'policy',
        resourceName: 'cms-cloud-admin/ct-ado-poweruser-permissions-boundary-policy',
    })),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2RrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHVDQUFxQztBQUVyQyxtQ0FBbUM7QUFFbkMsZ0VBQTJEO0FBRTNELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7QUFDaEQsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztBQUM5QyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQztBQUVoRixNQUFNLGlCQUFpQixHQUFHLElBQUksR0FBRyxDQUFDLHVCQUF1QixDQUFDO0lBQ3hELFNBQVMsRUFBRSxLQUFLO0lBQ2hCLG9CQUFvQixFQUFFLGtCQUFrQixPQUFPLElBQUksTUFBTSxFQUFFO0lBQzNELFlBQVksRUFBRSxFQUFFO0lBQ2hCLDJCQUEyQixFQUFFLGdCQUFnQixPQUFPLHdEQUF3RCxPQUFPLElBQUksTUFBTSxFQUFFO0lBQy9ILGFBQWEsRUFBRSxnQkFBZ0IsT0FBTyxzREFBc0QsT0FBTyxJQUFJLE1BQU0sRUFBRTtJQUMvRywwQkFBMEIsRUFBRSxnQkFBZ0IsT0FBTywrREFBK0QsT0FBTyxJQUFJLE1BQU0sRUFBRTtJQUNySSwyQkFBMkIsRUFBRSxnQkFBZ0IsT0FBTyxnRUFBZ0UsT0FBTyxJQUFJLE1BQU0sRUFBRTtJQUN2SSxhQUFhLEVBQUUsZ0JBQWdCLE9BQU8sc0RBQXNELE9BQU8sSUFBSSxNQUFNLEVBQUU7Q0FDaEgsQ0FBQyxDQUFDO0FBRUgsTUFBTSxLQUFLLEdBQUcsSUFBSSxtQ0FBZSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUU7SUFDL0QsV0FBVyxFQUFFLGlCQUFpQjtJQUM5QixHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsT0FBTztRQUNoQixNQUFNLEVBQUUsTUFBTTtLQUNmO0lBQ0QsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUNsRSxTQUFTLEVBQUUsS0FBSztRQUNoQixPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxNQUFNO1FBQ2QsT0FBTyxFQUFFLE9BQU87UUFDaEIsUUFBUSxFQUFFLFFBQVE7UUFDbEIsWUFBWSxFQUFFLDhEQUE4RDtLQUM3RSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5cbmltcG9ydCAnc291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyJztcblxuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcblxuaW1wb3J0IHsgSGVsbG9Xb3JsZFN0YWNrIH0gZnJvbSAnLi4vbGliL2hlbGxvLXdvcmxkLXN0YWNrJztcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcbmNvbnN0IGFjY291bnQgPSBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5UO1xuY29uc3QgcmVnaW9uID0gcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfUkVHSU9OO1xuY29uc3Qgc3RhZ2UgPSBwcm9jZXNzLmVudi5ERVBMT1lfU1RBR0UgPyBwcm9jZXNzLmVudi5ERVBMT1lfU1RBR0UgOiAndW5kZWZpbmVkJztcblxuY29uc3QgY3VzdG9tU3ludGhlc2l6ZXIgPSBuZXcgY2RrLkRlZmF1bHRTdGFja1N5bnRoZXNpemVyKHtcbiAgcXVhbGlmaWVyOiAnb25lJyxcbiAgZmlsZUFzc2V0c0J1Y2tldE5hbWU6IGBjZGstb25lLWFzc2V0cy0ke2FjY291bnR9LSR7cmVnaW9ufWAsXG4gIGJ1Y2tldFByZWZpeDogJycsXG4gIGNsb3VkRm9ybWF0aW9uRXhlY3V0aW9uUm9sZTogYGFybjphd3M6aWFtOjoke2FjY291bnR9OnJvbGUvZGVsZWdhdGVkYWRtaW4vZGV2ZWxvcGVyL2Nkay1vbmUtY2ZuLWV4ZWMtcm9sZS0ke2FjY291bnR9LSR7cmVnaW9ufWAsXG4gIGRlcGxveVJvbGVBcm46IGBhcm46YXdzOmlhbTo6JHthY2NvdW50fTpyb2xlL2RlbGVnYXRlZGFkbWluL2RldmVsb3Blci9jZGstb25lLWRlcGxveS1yb2xlLSR7YWNjb3VudH0tJHtyZWdpb259YCxcbiAgZmlsZUFzc2V0UHVibGlzaGluZ1JvbGVBcm46IGBhcm46YXdzOmlhbTo6JHthY2NvdW50fTpyb2xlL2RlbGVnYXRlZGFkbWluL2RldmVsb3Blci9jZGstb25lLWZpbGUtcHVibGlzaGluZy1yb2xlLSR7YWNjb3VudH0tJHtyZWdpb259YCxcbiAgaW1hZ2VBc3NldFB1Ymxpc2hpbmdSb2xlQXJuOiBgYXJuOmF3czppYW06OiR7YWNjb3VudH06cm9sZS9kZWxlZ2F0ZWRhZG1pbi9kZXZlbG9wZXIvY2RrLW9uZS1pbWFnZS1wdWJsaXNoaW5nLXJvbGUtJHthY2NvdW50fS0ke3JlZ2lvbn1gLFxuICBsb29rdXBSb2xlQXJuOiBgYXJuOmF3czppYW06OiR7YWNjb3VudH06cm9sZS9kZWxlZ2F0ZWRhZG1pbi9kZXZlbG9wZXIvY2RrLW9uZS1sb29rdXAtcm9sZS0ke2FjY291bnR9LSR7cmVnaW9ufWAsXG59KTtcblxuY29uc3Qgc3RhY2sgPSBuZXcgSGVsbG9Xb3JsZFN0YWNrKGFwcCwgJ0hlbGxvV29ybGRTdGFjaycsIHN0YWdlLCB7XG4gIHN5bnRoZXNpemVyOiBjdXN0b21TeW50aGVzaXplcixcbiAgZW52OiB7XG4gICAgYWNjb3VudDogYWNjb3VudCxcbiAgICByZWdpb246IHJlZ2lvbixcbiAgfSxcbiAgcGVybWlzc2lvbnNCb3VuZGFyeTogY2RrLlBlcm1pc3Npb25zQm91bmRhcnkuZnJvbUFybihjZGsuQXJuLmZvcm1hdCh7XG4gICAgcGFydGl0aW9uOiAnYXdzJyxcbiAgICBzZXJ2aWNlOiAnaWFtJyxcbiAgICByZWdpb246IHJlZ2lvbixcbiAgICBhY2NvdW50OiBhY2NvdW50LFxuICAgIHJlc291cmNlOiAncG9saWN5JyxcbiAgICByZXNvdXJjZU5hbWU6ICdjbXMtY2xvdWQtYWRtaW4vY3QtYWRvLXBvd2VydXNlci1wZXJtaXNzaW9ucy1ib3VuZGFyeS1wb2xpY3knLFxuICB9KSksXG59KTtcbiJdfQ==