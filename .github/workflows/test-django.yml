name: Unit Test Django Code

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test-django:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
    services:
      postgres:
        image: pgvector/pgvector:pg15  # Use the same image as in docker-compose.yml
        env:
          POSTGRES_HOST: localhost
          POSTGRES_DB: eregs
          POSTGRES_USER: eregs
          POSTGRES_PASSWORD: sgere
        ports:
          - 5432:5432
          # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Install Python dependencies
      - name: Install Python dependencies
        if: success()
        run: |
          python -m pip install --upgrade pip
          pip install -r ./solution/backend/requirements.txt
          
      # Execute the Python tests
      - name: Run Python unit tests
        if: success()
        env:
          STATIC_URL: http://localhost:8888/
          DB_HOST: localhost
          DB_NAME: eregs
          DB_USER: eregs
          DB_PASSWORD: sgere
          DB_PORT: 5432
          HTTP_AUTH_USER: eregs
          HTTP_AUTH_PASSWORD: sgere
        working-directory: ./solution/backend
        run: |
          pytest -vv
