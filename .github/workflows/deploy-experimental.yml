name: Deploy Experimental

on:
  pull_request:
    types: [opened]


jobs:
  deploy:
    environment:
      name: "dev"
      url: ${{ steps.deploy-regulations-site-server.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Find PR number
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open
      # This will echo "Your PR is 7", or be skipped if there is no current PR.
      - name: Echo PR#
        env:
          PR: ${{ steps.findPr.outputs.pr }}
        run: echo "Your PR is ${PR}"
        if: success() && steps.findPr.outputs.number
      # should build first and save the artifact
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '15.11.0'
      - name: build static assets
        run: |
          make regulations
          cp -r regulations/static/regulations serverless/static-assets/static
          rm -r regulations/static/node_modules
      - uses: actions/setup-node@v1
        if: success() && steps.findPr.outputs.number
        with:
          node-version: '12.x'
      - uses: actions/setup-python@v2
        if: success() && steps.findPr.outputs.number
        with:
          python-version: '3.8'
      - name: deploy static assets
        if: success() && steps.findPr.outputs.number
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PR: ${{ steps.findPr.outputs.pr }}
        run: |
          pushd serverless/static-assets/serverless
          npm install serverless -g
          npm install
          serverless deploy --stage dev-${PR}
          popd
      - name: deploy regulations site server
        id: deploy-regulations-site-server
        if: success() && steps.findPr.outputs.number
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PR: ${{ steps.findPr.outputs.pr }}
        run: |
          pushd serverless
          npm install serverless -g
          npm install
          serverless deploy --config ./serverless-experimental.yml --stage dev-${PR} | tee output.log
          serverless invoke --config ./serverless-experimental.yml --function reg_core_migrate --stage dev-${PR}
          serverless invoke --config ./serverless-experimental.yml --function create_su --stage dev-${PR}
          serverless invoke --config ./serverless-experimental.yml --function populate_content --stage dev-${PR}
          echo "::set-output name=url::$(cat output.log | grep -m1 'ANY -' | cut -c 9-)"
          popd
      - name: Setup Go
        if: success() && steps.findPr.outputs.number
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16' # The Go version to download (if necessary) and use.
      - name: load regulations
        if: success() && steps.findPr.outputs.number
        run: make data.experimental URL=${{ steps.deploy-regulations-site-server.outputs.url }}
        env:
          EREGS_USERNAME: ${{ secrets.EREGS_USERNAME }}
          EREGS_PASSWORD: ${{ secrets.EREGS_PASSWORD }}
          NAME: experimental
