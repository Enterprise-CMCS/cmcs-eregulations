name: Collect Garbage

on:
  pull_request:
    types: [opened, synchronize, reopened]
  #workflow_dispatch:
  #schedule:
  #  - cron: "0 0 * * 0" # weekly

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

jobs:
  collect-garbage:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env: ["dev", "val", "prod"]
        app: ["docker-lambdas", "static-assets", "text-extractor", "zip-lambdas"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 22

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.aws_default_region }}

      - name: Run garbage collection
        env:
          ENVIRONMENT: ${{ matrix.env }}
          APP: ${{ matrix.app }}
        run: |
          pushd cdk-eregs
          npm install
          npm install fs-extra
          npm install --save-dev @types/fs-extra
          npx cdk gc \
            --unstable=gc \
            --context environment=$ENVIRONMENT \
            --type all \
            --confirm false \
            --app "npx ts-node bin/${APP}.ts"
