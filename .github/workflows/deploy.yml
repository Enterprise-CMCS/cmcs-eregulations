name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: patch libraries
        run: |
          pushd regulations-core
          git apply ../patches/regcore-jsonschema.patch
          git apply ../patches/regcore-migrations.patch
          popd
      # should build first and save the artifact
      - uses: actions/setup-node@v1
        with:
          node-version: '6.9.2'
      - name: build static assets 
        run: |
          pushd config/static-assets
          make clean
          make build
          popd
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: deploy static assets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd config/static-assets/serverless
          npm install serverless -g
          npm install
          serverless deploy
          popd
      - name: deploy regualtions core API
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd config/regulations-core
          npm install serverless -g
          npm install
          serverless deploy
          serverless invoke --function reg_core_migrate
          popd
      - name: deploy regualtions site server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd config/regulations-site
          npm install serverless -g
          npm install
          serverless deploy
          popd
