name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    strategy:
      max-parallel: 1
      matrix:
        environment: ["dev", "val", "prod"]
    environment: 
      name: ${{ matrix.environment }}
      url: ${{ steps.deploy-regulations-site-server.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: patch libraries
        run: |
          pushd regulations-core
          git apply ../.patches/regcore-migrations.patch
          popd
      # should build first and save the artifact
      - uses: actions/setup-node@v1
        with:
          node-version: '15.11.0'
      - name: build static assets 
        run: |
          make regulations-site
          cp -r regulations-site/regulations/static/regulations serverless/static-assets/static
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: deploy static assets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd serverless/static-assets/serverless
          npm install serverless -g
          npm install
          serverless deploy --stage ${{ matrix.environment }}
          popd
      - name: deploy regulations core API
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd serverless/regulations-core
          npm install serverless -g
          npm install
          serverless deploy --stage ${{ matrix.environment }}
          serverless invoke --function reg_core_migrate  --stage ${{ matrix.environment }}
          serverless invoke --function reg_core_rebuild_index  --stage ${{ matrix.environment }}
          popd
      - name: deploy regulations site server
        id: deploy-regulations-site-server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pushd serverless/regulations-site
          npm install serverless -g
          npm install
          serverless deploy --stage ${{ matrix.environment }} | tee output.log
          echo "::set-output name=url::$(cat output.log | grep -m1 'ANY -' | cut -c 9-)"
          popd
