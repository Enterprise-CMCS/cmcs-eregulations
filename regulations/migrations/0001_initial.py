# Generated by Django 3.2.7 on 2021-10-06 17:39

import logging

from django.db import migrations, connection, ProgrammingError
from django.db.backends.utils import truncate_name

logger = logging.getLogger(__name__)


app_name = ("supplementary_content", "supplemental_content")
models = [
    "regulationsection",
    "category",
    "supplementarycontent",
    "regulationsection_supplementary_content",
]


def migrate_supplemental_content_app(apps, schema_editor):
    with connection.cursor() as cursor:
        cursor.execute(
            f"SELECT * FROM django_content_type "
            f"WHERE app_label='{app_name[1]}'"
        )
        already_ran = cursor.fetchone()
        if already_ran:
            logger.info("Rename has already been done.")
            return
        cursor.execute(
            f"UPDATE django_content_type SET app_label='{app_name[1]}' "
            f"WHERE app_label='{app_name[0]}'"
        )
        cursor.execute(
            f"UPDATE django_migrations SET app='{app_name[1]}' "
            f"WHERE app='{app_name[0]}'"
        )

        for model_name in models:
            old_table_name = truncate_name(
                f"{app_name[0]}_{model_name}",
                connection.ops.max_name_length()
            )
            new_table_name = truncate_name(
                f"{app_name[1]}_{model_name}",
                connection.ops.max_name_length()
            )
            query = (
                f"ALTER TABLE {old_table_name} "
                f"RENAME TO {new_table_name}"
            )

            try:
                cursor.execute(query)
            except ProgrammingError:
                logger.warning(
                    'Rename query failed: "%s"',
                    query,
                    exc_info=True
                )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(migrate_supplemental_content_app),
    ]
