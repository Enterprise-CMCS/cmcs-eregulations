# Generated by Django 3.2.15 on 2022-08-18 11:08

from django.db import migrations


def convert_categories_to_doc_type(apps, schema_editor):
    FederalRegisterCategoryLink = apps.get_model("resources", "FederalRegisterCategoryLink")
    FederalRegisterDocument = apps.get_model("resources", "FederalRegisterDocument")
    Category = apps.get_model("resources", "Category")
    AbstractCategory = apps.get_model("resources", "AbstractCategory")

    try:
        category = FederalRegisterCategoryLink.objects.get(name="FR_Doc").category
    except FederalRegisterCategoryLink.DoesNotExist:
        try:
            category = AbstractCategory.objects.get(name="FR_Doc")
        except AbstractCategory.DoesNotExist:
            category = Category.objects.create(name="FR_Doc").abstractcategory_ptr
        FederalRegisterCategoryLink.objects.create(
            name="FR_Doc",
            category=category,
        )

    for doc in FederalRegisterDocument.objects.all():
        try:
            value = FederalRegisterCategoryLink.objects.get(category=doc.category).name
        except FederalRegisterCategoryLink.DoesNotExist:
            value = ""

        if value == "Rule" or value == "Final Rules":
            doc.doc_type = "Final"
        elif value == "Proposed Rules" or value == "Proposed Rule":
            doc.doc_type = "NPRM"

        doc.category = category
        doc.save()


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0021_federalregisterdocument_doc_type'),
    ]

    operations = [
        migrations.RunPython(convert_categories_to_doc_type),
    ]
