# Generated by Django 5.0.4 on 2024-07-30 12:37
#
# Modified by Caleb Godwin on 2024-07-30 to copy the content field from content-search app,
# so that we can enable a decoupling of text extraction and search functionality.

import logging
logger = logging.getLogger(__name__)

from django.db import migrations, models


TIMEOUT_MINUTES = 10


def copy_content(apps, schema_editor):
    # Lessen the likelihood of this migration timing out during the copy operation
    schema_editor.execute(f"SET LOCAL statement_timeout TO {TIMEOUT_MINUTES * 60000};")

    # This check ensures the apps stay decoupled, we do not want to introduce a circular dependency
    if not apps.is_installed("content_search"):
        logger.warning("The content_search app is not installed, so the content field will not be copied.")
        return

    try:
        ContentIndex = apps.get_model("content_search", "ContentIndex")
    except Exception:  # The ContentIndex model does not exist anymore, so log and return
        logger.warning("Could not import the ContentIndex model, so the content field will not be copied.")
        return

    for i in ContentIndex.objects.filter(resource__isnull=False):
        resource = i.resource
        resource.content = i.content
        resource.save()


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0003_remove_internalcategory_name_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='abstractresource',
            name='content',
            field=models.TextField(blank=True),
        ),
        migrations.AlterModelOptions(
            name='abstractresource',
            options={'base_manager_name': 'objects'},
        ),
        migrations.RunPython(copy_content, reverse_code=migrations.RunPython.noop),
    ]
