# Generated by Django 3.2.18 on 2023-03-17 12:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_jsonform.models.fields
import resources.models


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0028_set_name_sort'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Section'), (1, 'Subpart')], default=0)),
                ('title', models.IntegerField()),
                ('part', models.IntegerField()),
                ('subpart', models.CharField(blank=True, max_length=12, null=True)),
                ('section', models.IntegerField(null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='resources.location')),
            ],
            options={
                'unique_together': {('type', 'title', 'part', 'subpart'), ('type', 'title', 'part', 'section')},
            },
        ),
        migrations.CreateModel(
            name='NewCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Category'), (1, 'Sub-category')], default=0)),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, default=0)),
                ('show_if_empty', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='resources.newcategory')),
            ],
            options={
                'unique_together': {('type', 'name', 'description', 'order'), ('type', 'name', 'description', 'order', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='ResourceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Federal Register Document Group')], default=0)),
                ('docket_number_prefixes', django_jsonform.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, default=list, help_text='Common prefixes to use when grouping Federal Register Documents, e.g. "CMS-1234-" to match any docket number starting with that string.', size=None)),
            ],
            options={
                'unique_together': {('type', 'docket_number_prefixes')},
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Supplemental Content'), (1, 'Federal Register Document')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=True)),
                ('location_history', models.JSONField(default=list)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=512, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('date', models.CharField(blank=True, help_text='Leave blank or enter one of: "YYYY", "YYYY-MM", or "YYYY-MM-DD".', max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Date field must be blank or of format "YYYY", "YYYY-MM", or "YYYY-MM-DD"! For example: 2021, 2021-01, or 2021-01-31.', regex='^\\d{4}((-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))|(-(0[1-9]|1[0-2])))?$')])),
                ('docket_numbers', django_jsonform.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, default=list, size=None)),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('correction', models.BooleanField(default=False)),
                ('withdrawal', models.BooleanField(default=False)),
                ('doc_type', models.CharField(blank=True, max_length=255)),
                ('name_sort', resources.models.NaturalSortField('name', db_index=True, editable=False, max_length=255, null=True)),
                ('description_sort', resources.models.NaturalSortField('description', db_index=True, editable=False, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to='resources.newcategory')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to='resources.resourcegroup')),
                ('locations', models.ManyToManyField(blank=True, related_name='resources', to='resources.Location')),
                ('related_resources', models.ManyToManyField(blank=True, to='resources.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='NewResourcesConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fr_doc_category', models.ForeignKey(blank=True, help_text='The category that contains Federal Register Documents. This affects all newly uploaded Federal Register Documents.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fr_doc_category_config', to='resources.newcategory')),
            ],
            options={
                'verbose_name': 'Resources Configuration',
            },
        ),
        migrations.CreateModel(
            name='NewCategoryCategory',
            fields=[
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.newcategory',),
        ),
        migrations.CreateModel(
            name='NewCategorySubCategory',
            fields=[
            ],
            options={
                'verbose_name': 'Sub-category',
                'verbose_name_plural': 'Sub-categories',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.newcategory',),
        ),
        migrations.CreateModel(
            name='NewFederalRegisterDocument',
            fields=[
            ],
            options={
                'verbose_name': 'Federal Register Document',
                'verbose_name_plural': 'Federal Register Documents',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.resource',),
        ),
        migrations.CreateModel(
            name='NewFederalRegisterDocumentGroup',
            fields=[
            ],
            options={
                'verbose_name': 'Federal Register Doc Group',
                'verbose_name_plural': 'Federal Register Doc Groups',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.resourcegroup',),
        ),
        migrations.CreateModel(
            name='NewSupplementalContent',
            fields=[
            ],
            options={
                'verbose_name': 'Supplemental Content',
                'verbose_name_plural': 'Supplemental Content',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.resource',),
        ),
        migrations.CreateModel(
            name='SectionLocation',
            fields=[
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.location',),
        ),
        migrations.CreateModel(
            name='SubpartLocation',
            fields=[
            ],
            options={
                'verbose_name': 'Subpart',
                'verbose_name_plural': 'Subparts',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('resources.location',),
        ),
    ]
