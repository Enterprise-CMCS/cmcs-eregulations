# Generated by Django 5.0.7 on 2024-08-07 13:57
#
# Modified by Caleb Godwin on 2024-08-07 to copy the content field from content-search app,
# so that we can enable a decoupling of text extraction and search functionality.

import django.db.models.deletion
from django.db import migrations, models


TIMEOUT_MINUTES = 10


def copy_content(apps, schema_editor):
    # Lessen the likelihood of this migration timing out during the copy operation
    schema_editor.execute(f"SET LOCAL statement_timeout TO {TIMEOUT_MINUTES * 60000};")

    # This check ensures the apps stay decoupled, we do not want to introduce a circular dependency
    if not apps.is_installed("content_search"):
        logger.warning("The content_search app is not installed, so the content field will not be copied.")
        return

    try:
        ContentIndex = apps.get_model("content_search", "ContentIndex")
    except Exception:  # The ContentIndex model does not exist anymore, so log and return
        logger.warning("Could not import the ContentIndex model, so the content field will not be copied.")
        return

    AbstractResource = apps.get_model("resources", "AbstractResource")
    ResourceContent = apps.get_model("resources", "ResourceContent")

    # Copy the content from the ContentIndex model to the new SingleStringModel
    for index in ContentIndex.objects.filter(resource__isnull=False):
        content = ResourceContent.objects.create(resource=index.resource)
        content.value = index.content
        content.save()


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0003_remove_internalcategory_name_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='resourcesconfiguration',
            name='auto_extract',
            field=models.BooleanField(default=False, help_text='Check this box if eRegs should automatically request text extraction on any resource when it is originally saved/created or when its source is changed: URL (for public and internal links), document number (for FR links), or attached file (for internal files).', verbose_name='Auto Extract'),
        ),
        migrations.AlterField(
            model_name='resourcesconfiguration',
            name='fr_link_category',
            field=models.ForeignKey(blank=True, help_text='The category that contains Federal Register Links. This affects all newly uploaded Federal Register Links.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fr_link_category_config', to='resources.abstractcategory', verbose_name='FR Link Category'),
        ),
        migrations.CreateModel(
            name='ResourceContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True)),
                ('resource', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='resources.abstractresource')),
            ],
        ),
        migrations.RunPython(copy_content, reverse_code=migrations.RunPython.noop),
    ]
