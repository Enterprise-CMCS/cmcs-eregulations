# Generated by Django 5.0.4 on 2024-05-14 15:17

import common.fields
import common.mixins
import django.core.validators
import django.db.models.deletion
import django_jsonform.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0033_federalregisterdocument_raw_text_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractCitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.IntegerField()),
                ('part', models.IntegerField()),
                ('old_pk', models.IntegerField()),
            ],
            bases=(models.Model, common.mixins.DisplayNameFieldMixin),
        ),
        migrations.CreateModel(
            name='NewAbstractCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(blank=True, default=0)),
                ('show_if_empty', models.BooleanField(default=False)),
                ('old_pk', models.IntegerField()),
            ],
            bases=(models.Model, common.mixins.DisplayNameFieldMixin),
        ),
        migrations.CreateModel(
            name='NewAbstractResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=True)),
                ('citation_history', models.JSONField(default=list)),
                ('statute_citations', common.fields.StatuteRefField(blank=True, default=list, verbose_name='Statute reference citations')),
                ('usc_citations', common.fields.UscRefField(blank=True, default=list, verbose_name='U.S.C. reference citations')),
                ('internal_notes', models.TextField(blank=True)),
                ('name', models.CharField(blank=True, max_length=512)),
                ('description', models.TextField(blank=True)),
                ('date', common.fields.VariableDateField(blank=True, help_text='Leave blank or enter one of: "YYYY", "YYYY-MM", or "YYYY-MM-DD".', max_length=10, null=True, validators=[common.fields.validate_date, django.core.validators.RegexValidator(message='Date field must be blank or of the format "YYYY", "YYYY-MM", or "YYYY-MM-DD". For example: 2021, 2021-01, or 2021-01-31.', regex='^\\d{4}((-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))|(-(0[1-9]|1[0-2])))?$')])),
                ('url', models.URLField(blank=True, max_length=512)),
                ('extract_url', models.URLField(blank=True, max_length=512)),
                ('name_sort', common.fields.NaturalSortField('name', db_index=True, editable=False, max_length=255, null=True)),
                ('description_sort', common.fields.NaturalSortField('description', db_index=True, editable=False, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to='resources.newabstractcategory')),
                ('citations', models.ManyToManyField(blank=True, related_name='resources', to='resources.abstractcitation')),
                ('old_pk', models.IntegerField()),
            ],
            bases=(models.Model, common.mixins.DisplayNameFieldMixin),
        ),
        migrations.CreateModel(
            name='NewSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=512)),
                ('short_name', models.CharField(blank=True, max_length=50)),
                ('abbreviation', models.CharField(blank=True, max_length=10)),
                ('description', models.TextField(blank=True)),
                ('combined_sort', common.fields.CombinedNaturalSort(['short_name', 'abbreviation', 'full_name'], db_index=True, editable=False, max_length=255, null=True)),
                ('old_pk', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
            bases=(models.Model, common.mixins.DisplayNameFieldMixin),
        ),
        migrations.CreateModel(
            name='NewSubpart',
            fields=[
                ('abstractcitation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.abstractcitation')),
                ('subpart_id', models.CharField(max_length=12)),
            ],
            options={
                'verbose_name': 'Subpart',
                'verbose_name_plural': 'Subparts',
                'ordering': ['title', 'part', 'subpart_id'],
            },
            bases=('resources.abstractcitation',),
        ),
        migrations.CreateModel(
            name='InternalCategory',
            fields=[
                ('newabstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractcategory')),
                ('name', models.CharField(max_length=512, unique=True)),
            ],
            options={
                'verbose_name': 'Internal Category',
                'verbose_name_plural': 'Internal Categories',
                'ordering': ['order', 'name'],
            },
            bases=('resources.newabstractcategory',),
        ),
        migrations.CreateModel(
            name='PublicCategory',
            fields=[
                ('newabstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractcategory')),
                ('name', models.CharField(max_length=512, unique=True)),
            ],
            options={
                'verbose_name': 'Public Category',
                'verbose_name_plural': 'Public Categories',
                'ordering': ['order', 'name'],
            },
            bases=('resources.newabstractcategory',),
        ),
        migrations.CreateModel(
            name='InternalResource',
            fields=[
                ('newabstractresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractresource')),
            ],
            bases=('resources.newabstractresource',),
        ),
        migrations.CreateModel(
            name='PublicResource',
            fields=[
                ('newabstractresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractresource')),
            ],
            bases=('resources.newabstractresource',),
        ),
        migrations.AddField(
            model_name='newabstractresource',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='resources', to='resources.newsubject'),
        ),
        migrations.CreateModel(
            name='NewSection',
            fields=[
                ('abstractcitation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.abstractcitation')),
                ('section_id', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='resources.newsubpart')),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['title', 'part', 'section_id'],
            },
            bases=('resources.abstractcitation',),
        ),
        migrations.CreateModel(
            name='InternalSubCategory',
            fields=[
                ('newabstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractcategory')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='resources.internalcategory')),
            ],
            options={
                'verbose_name': 'Internal Subcategory',
                'verbose_name_plural': 'Internal Subcategories',
                'ordering': ['order', 'name'],
            },
            bases=('resources.newabstractcategory',),
        ),
        migrations.CreateModel(
            name='PublicSubCategory',
            fields=[
                ('newabstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractcategory')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='resources.publiccategory')),
            ],
            options={
                'verbose_name': 'Public Subcategory',
                'verbose_name_plural': 'Public Subcategories',
                'ordering': ['order', 'name'],
            },
            bases=('resources.newabstractcategory',),
        ),
        migrations.CreateModel(
            name='InternalFile',
            fields=[
                ('internalresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.internalresource')),
            ],
            bases=('resources.internalresource',),
        ),
        migrations.CreateModel(
            name='InternalLink',
            fields=[
                ('internalresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.internalresource')),
            ],
            bases=('resources.internalresource',),
        ),
        migrations.CreateModel(
            name='FederalRegisterLink',
            fields=[
                ('publicresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.publicresource')),
                ('docket_numbers', django_jsonform.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=512), blank=True, default=list, size=None)),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('correction', models.BooleanField(default=False)),
                ('withdrawal', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Federal Register Link',
                'verbose_name_plural': 'Federal Register Links',
                'ordering': ['-date', 'document_number', 'name', 'description'],
            },
            bases=('resources.publicresource',),
        ),
        migrations.CreateModel(
            name='PublicLink',
            fields=[
                ('publicresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.publicresource')),
            ],
            options={
                'verbose_name': 'Public Link',
                'verbose_name_plural': 'Public Links',
                'ordering': ['-date', 'name', 'description'],
            },
            bases=('resources.publicresource',),
        ),
        migrations.CreateModel(
            name='ResourceGroup',
            fields=[
                ('newabstractresource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resources.newabstractresource')),
                ('common_identifiers', django_jsonform.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=512), blank=True, default=list, help_text='Common identifiers to use when grouping resources. For example, when grouping Federal Register Documents, use the docket number prefix, like "CMS-1234-".', size=None)),
                ('resources', models.ManyToManyField(blank=True, related_name='groups', to='resources.newabstractresource')),
            ],
            options={
                'verbose_name': 'Resource Group',
                'verbose_name_plural': 'Resource Groups',
                'ordering': ('name', 'common_identifiers'),
            },
            bases=('resources.newabstractresource',),
        ),
    ]
