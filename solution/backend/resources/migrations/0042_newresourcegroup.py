# Generated by Django 5.0.6 on 2024-06-27 14:05

import django_jsonform.models.fields
from django.db import migrations, models


TIMEOUT_MINUTES = 10


def copy_resource_groups(apps, schema_editor):
    schema_editor.execute(f"SET LOCAL statement_timeout TO {TIMEOUT_MINUTES * 60000};")
    NewResourceGroup = apps.get_model("resources", "NewResourceGroup")
    OldResourceGroup = apps.get_model("resources", "ResourceGroup")
    for i in OldResourceGroup.objects.all():
        group = NewResourceGroup.objects.create(
            name=i.name or "",
            common_identifiers=i.common_identifiers,
        )
        group.resources.set(i.resources.all())
        group.save()


def delete_old_resource_groups(apps, schema_editor):
    OldResourceGroup = apps.get_model("resources", "ResourceGroup")
    AbstractResource = apps.get_model("resources", "AbstractResource")
    pks = list(OldResourceGroup.objects.values_list("pk", flat=True))
    OldResourceGroup.objects.all().delete()
    AbstractResource.objects.filter(pk__in=pks).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0041_alter_abstractresource_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewResourceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='In leiu of (or in addition to) a list of common document identifiers, you may specify a name that identifies this group of documents.', max_length=512)),
                ('common_identifiers', django_jsonform.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=512), blank=True, default=list, help_text='Common identifiers to use when grouping documents. For example, when grouping Federal Register Documents, use the docket number prefix, like "CMS-1234-".', size=None)),
                ('resources', models.ManyToManyField(blank=True, related_name='new_resource_groups', to='resources.abstractresource')),
            ],
            options={
                'verbose_name': 'Resource Group',
                'verbose_name_plural': 'Resource Groups',
                'ordering': ['name', 'common_identifiers'],
            },
        ),
        migrations.RunPython(copy_resource_groups),
        migrations.RunPython(delete_old_resource_groups),
    ]
