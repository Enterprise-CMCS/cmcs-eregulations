#!/bin/bash

# Set variables
PR_NUMBER=$1
if ! command -v aws >/dev/null 2>&1; then
  echo "you must install aws cli first"
  exit 1
fi

if [[ ${PR_NUMBER} ]]; then
  STACK_NAMES=("cmcs-eregs-parser-dev${PR_NUMBER}" "cmcs-eregs-site-dev${PR_NUMBER}" "cmcs-eregs-static-assets-dev${PR_NUMBER}" "cmcs-eregs-fr-parser-dev${PR_NUMBER}")
  REGION="us-east-1"

  # Loop through the list of stack names and delete each stack and associated S3 buckets
  for STACK_NAME in "${STACK_NAMES[@]}"
  do
    # Get list of S3 bucket names associated with the stack
    S3_BUCKETS=$(aws cloudformation describe-stack-resources --stack-name $STACK_NAME --region $REGION --query "StackResources[?ResourceType=='AWS::S3::Bucket'].PhysicalResourceId" --output text)
    echo "deleting s3 buckets: ${S3_BUCKETS}"

    # Loop through the list of S3 bucket names and delete each bucket
    for BUCKET_NAME in $S3_BUCKETS
    do
      aws s3 rb s3://$BUCKET_NAME --force
    done

    # Delete the CloudFormation stack
    echo "Delete stack ${STACK_NAME}\n"
    aws cloudformation delete-stack --stack-name $STACK_NAME --region $REGION

    # Wait for stack deletion to complete
    aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME --region $REGION

    # Delete the associated log groups
    LOG_GROUPS=$(aws logs describe-log-groups --log-group-name-prefix /aws/cloudformation/$STACK_NAME --query "logGroups[].logGroupName" --output text)

    echo "Deleting log groups: ${LOG_GROUPS}\n"

    for log_group in $LOG_GROUPS; do
      aws logs delete-log-group --log-group-name $log_group
    done

    # delete the unused security groups
    # Get a list of all security groups
    security_groups=$(aws ec2 describe-security-groups --query 'SecurityGroups[*].GroupId' --output text)

    # Loop through each security group and check if it is being used
    for sg_id in $security_groups
    do
      # Check if any network interfaces are associated with the security group
      if [[ -z $(aws ec2 describe-network-interfaces --filters Name=group-id,Values=$sg_id --query 'NetworkInterfaces[*]' --output text) ]]; then
        # If no network interfaces are associated with the security group, delete it
        echo "deleting log group ${sg_id} \n"
        aws ec2 delete-security-group --group-id $sg_id
      fi
    done
  done
else
  echo "you must pass a pr number"
  echo "syntax: delete_cloudformation_stack [ prnumber ]"
fi
