service: maintenance-api

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  iam:
    role: LambdaFunctionRole
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
      - 'application/pdf'
  logs:
    restApi:
      level: INFO
      roleManagedExternally: true
  lambdaHashingVersion: '20201221'
  tracing:
    apiGateway: true

functions:
  maintenanceFunction:
    handler: maintenance_lambda.handler
    timeout: 30
    events:
      - http: ANY /
      - http: ANY /{proxy+}
resources:
  Resources:
    LambdaFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: ${ssm:/account_vars/iam/path}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        # note that these rights are needed if you want your function to be able to communicate with resources within your vpc
        PermissionsBoundary:
          Fn::Join:
            - ''
            - - 'arn:aws:iam::'
              - Ref: AWS::AccountId
              - ':policy'
              - ${ssm:/account_vars/iam/permissions_boundary_policy}
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: LambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
custom:
  wsgi:
    app: handler.application
    packRequirements: false

plugins:
  - serverless-wsgi
