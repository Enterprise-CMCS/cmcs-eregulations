# Generated by Django 5.0.4 on 2024-07-22 14:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('content_search', '0001_initial'), ('content_search', '0002_add_vector'), ('content_search', '0003_contentindex_uid'), ('content_search', '0004_auto_20231129_1427'), ('content_search', '0005_populate_rank_fields'), ('content_search', '0006_contentindex_upload_category'), ('content_search', '0007_contentindex_division'), ('content_search', '0008_contentindex_ignore_robots_txt'), ('content_search', '0009_contentindex_extract_url'), ('content_search', '0010_remove_contentindex_document_type'), ('content_search', '0011_remove_v3_dependencies'), ('content_search', '0012_remove_contentindex_date_string_and_more')]

    initial = True

    dependencies = [
        ('regcore', '0014_auto_20230322_2234'),
        ('resources', '0001_to_0052_squashed'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndexedRegulationText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regcore.part')),
            ],
        ),
        migrations.CreateModel(
            name='ContentIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('rank_a_string', models.TextField(blank=True)),
                ('rank_b_string', models.TextField(blank=True)),
                ('rank_c_string', models.TextField(blank=True)),
                ('rank_d_string', models.TextField(blank=True)),
                ('resource', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='index', to='resources.abstractresource')),
                ('reg_text', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='index', to='content_search.indexedregulationtext')),
            ],
        ),
        migrations.RunSQL(
            sql='''
              ALTER TABLE content_search_contentindex ADD COLUMN vector_column tsvector GENERATED ALWAYS AS (
                setweight(to_tsvector('english', coalesce(rank_a_string, '')), 'A') ||
                setweight(to_tsvector('english', coalesce(rank_b_string,'')), 'B') ||
                setweight(to_tsvector('english', coalesce(rank_c_string,'')), 'C') ||
                setweight(to_tsvector('english', coalesce(rank_d_string,'')), 'D') ||
                setweight(to_tsvector('english', coalesce(content,'')), 'D')
              ) STORED;
              CREATE INDEX content_search_index_vec ON content_search_contentindex USING GIN (vector_column);
            ''',

            reverse_sql = '''
              ALTER TABLE content_search_contentindex DROP COLUMN vector_column;
            '''
        ),
    ]
