reg_site:
  environment:
    STATIC_URL: ${self:custom.settings.static_url}
    WORKING_DIR: /var/task
  handler: wsgi_handler.handler
  timeout: 30
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
  events:
    - http:
        path: /
        method: ANY
        authorizer:
          name: authorizer
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: request
    - http:
        path: /{proxy+}
        method: ANY
        authorizer:
          name: authorizer
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: request
authorizer:
  handler: authorizer.handler
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
reg_core_migrate:
  environment:
    STAGE: ${self:custom.stage}
  handler: migrate.handler
  timeout: 900
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
create_database:
  environment:
    STAGE: ${self:custom.stage}
  handler: createdb.handler
  timeout: 300
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
drop_database:
  environment:
    STAGE: ${self:custom.stage}
  handler: dropdb.handler
  timeout: 300
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
create_su:
  handler: createsu.handler
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
  timeout: 300
empty_bucket:
  handler: empty_bucket.handler
  layers:
    - ${cf:cmcs-eregs-static-assets-${self:custom.stage}.PythonRequirementsLambdaLayerQualifiedArn}
  timeout: 300
