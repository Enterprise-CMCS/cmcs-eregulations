# Generated by Django 3.2.12 on 2022-05-06 13:00

import logging

from django.db import migrations, connection, ProgrammingError
from django.db.backends.utils import truncate_name

logger = logging.getLogger(__name__)


app_name = ("supplemental_content", "resources")
models = [
    "abstractsupplementalcontent_locations",
    "category",
    "section",
    "subcategory",
    "subjectgroup",
    "subpart",
    "subsubcategory",
    "supplementalcontent",
    "abstractcategory",
    "abstractlocation",
    "abstractsupplementalcontent",
]


def migrate_supplemental_content_app(apps, schema_editor):
    with connection.cursor() as c:
        c.execute(
            f"SELECT * FROM django_content_type "
            f"WHERE app_label='{app_name[0]}'"
        )
        has_original = c.fetchone()
        c.execute(
            f"SELECT * FROM django_content_type "
            f"WHERE app_label='{app_name[1]}'"
        )
        has_renamed = c.fetchone()

        if has_renamed or not has_original:
            logger.info("New database or rename has already been done.")
            return

        c.execute(
            f"UPDATE django_content_type SET app_label='{app_name[1]}' "
            f"WHERE app_label='{app_name[0]}'"
        )
        c.execute(
            f"UPDATE django_migrations SET app='{app_name[1]}' "
            f"WHERE app='{app_name[0]}'"
        )

        for model in models:
            old_table_name = truncate_name(
                f"{app_name[0]}_{model}",
                connection.ops.max_name_length()
            )
            new_table_name = truncate_name(
                f"{app_name[1]}_{model}",
                connection.ops.max_name_length()
            )
            query = (
                f"ALTER TABLE {old_table_name} "
                f"RENAME TO {new_table_name}"
            )

            try:
                c.execute(query)
            except ProgrammingError:
                logger.warning(
                    'Rename query failed: "%s"',
                    query,
                    exc_info=True
                )


class Migration(migrations.Migration):

    dependencies = [
        ('regulations', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_supplemental_content_app),
    ]
